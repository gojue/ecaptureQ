name: Release

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

permissions: write-all

concurrency:
  group: "${{ github.workflow }} - ${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  get_version:
    name: Check Release Tag and package.json Version Consistency
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install jq for JSON parsing
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Get version from package.json
        id: get_version
        run: |
          TAG_REF="${GITHUB_REF##*/}"
          echo "Current tag: $TAG_REF"
          PKG_VERSION=$(jq -r .version package.json)
          echo "package.json version: $PKG_VERSION"
          echo "version=$PKG_VERSION" >> $GITHUB_OUTPUT
          if [[ "$TAG_REF" != "v$PKG_VERSION" ]]; then
            echo "Tag ($TAG_REF) does not match package.json version (v$PKG_VERSION)."
            exit 0
          fi
          echo "Tag and package.json version are consistent."

  build-artifacts:
    name: Build and Release
    needs: [get_version]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            target: x86_64-pc-windows-msvc
            arch: x86_64
          - os: windows-latest
            platform: windows
            target: aarch64-pc-windows-msvc
            arch: aarch64
          - os: macos-latest
            platform: macos
            target: aarch64-apple-darwin
            arch: aarch64
          - os: macos-latest
            platform: macos
            target: x86_64-apple-darwin
            arch: x86_64
          - os: ubuntu-22.04
            platform: linux
            target: x86_64-unknown-linux-gnu
            arch: x86_64
          - os: ubuntu-22.04
            platform: linux
            target: aarch64-unknown-linux-gnu
            arch: aarch64
          - os: ubuntu-22.04
            platform: android
            target: x86_64-linux-android
            arch: x86_64
          - os: ubuntu-22.04
            platform: android
            target: aarch64-linux-android
            arch: aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Java
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 26.1.10909125

      - name: Install NDK
        if: matrix.platform == 'android'
        run: sdkmanager "ndk;26.1.10909125"

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libgtk-3-dev libssl-dev xdg-utils librsvg2-dev libappindicator3-dev  patchelf

      - name: Download and setup eCapture for ${{ matrix.arch }}
        shell: bash
        if: matrix.platform == 'linux' || matrix.platform == 'android'
        run: |
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            ECAPTURE_ARCH="amd64"
          else
            ECAPTURE_ARCH="arm64"
          fi
          ECAPTURE_LATEST=$(curl -s https://api.github.com/repos/gojue/ecapture/releases/latest | grep tag_name | cut -d '"' -f 4)
          ECAPTURE_TAR="ecapture-${ECAPTURE_LATEST}-${{ matrix.platform }}-${ECAPTURE_ARCH}.tar.gz"
          ECAPTURE_DIR="ecapture-${ECAPTURE_LATEST}-${{ matrix.platform }}-${ECAPTURE_ARCH}"
          wget "https://github.com/gojue/ecapture/releases/download/${ECAPTURE_LATEST}/${ECAPTURE_TAR}" || exit 1
          tar -zxvf "${ECAPTURE_TAR}" || exit 1
          mkdir -p src-tauri/binaries
          cp "${ECAPTURE_DIR}/ecapture" src-tauri/binaries/${{ matrix.platform }}_ecapture_${ECAPTURE_ARCH} || exit 1

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest

      - name: Pnpm install
        run: pnpm i

      - name: Create keystore.properties for Android signing
        if: matrix.platform == 'android'
        run: |
          pnpm tauri android init
          echo "${{ secrets.ANDROID_SIGNING_RELEASE_KEY }}" | base64 --decode > release.decrypted.jks
          cat <<EOF > src-tauri/gen/android/keystore.properties
          password=${{ secrets.ANDROID_SIGNING_RELEASE_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_SIGNING_RELEASE_KEY_ALIAS }}
          storeFile=${{ github.workspace }}/release.decrypted.jks
          keyPassword=${{ secrets.ANDROID_SIGNING_RELEASE_KEY_ALIAS_PASSWORD }}
          EOF
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: eCaptureQ build (non-Android)
        if: matrix.platform != 'android'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v${{ needs.get_version.outputs.version }}
          releaseName: "eCaptureQ v${{ needs.get_version.outputs.version }}"
          releaseBody: ""
          releaseDraft: true
          prerelease: false

      # [修改] 构建并自动签名安卓应用
      - name: eCaptureQ build (Android) ${{ matrix.arch }}
        if: matrix.platform == 'android'
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/26.1.10909125
        run: |
          pnpm tauri android build --target ${{ matrix.arch }}

      # [删除] 整个手动签名的步骤被删除，因为上一步已经自动完成了

      # [新增] 重命名已签名的 APK 以便发布
      - name: Rename Artifact
        if: matrix.platform == 'android'
        run: |
          mv src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk ./eCaptureQ_v${{ needs.get_version.outputs.version }}_${{ matrix.arch }}.apk

      # [修改] 发布重命名后的 APK 文件
      - name: Publish
        if: matrix.platform == 'android'
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: eCaptureQ v${{ needs.get_version.outputs.version }}
          tag_name: v${{ needs.get_version.outputs.version }}
          generate_release_notes: true
          files: ./eCaptureQ_v${{ needs.get_version.outputs.version }}_${{ matrix.arch }}.apk